@model Test1.Models.Order

<!DOCTYPE html>
<html>
<head>
    <!-- Include necessary stylesheets and libraries -->
    <style>
        /* Your existing styles */
        /* ... */

        /* Add missing style for the dashed line */
        .dashed-line {
            border-top: 4px dashed darkgray;
            width: 100%;
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .item-card {
            background-color: #f0f0f0; /* Gray background color */
            padding: 10px;
            margin-bottom: 10px;
            display: flex; /* Display contents in a flex container */
        }

        .item-content {
            display: flex; /* Display contents in a flex container */
            justify-content: space-between; /* Space between left and right content */
            align-items: center; /* Center vertically within the item card */
            width: 100%;
        }

        .left-content {
            flex: 1; /* Take up remaining space in the left content */
        }

        .right-content {
            margin-left: 10px; /* Add spacing between left and right content */
        }

            /* Add shadow to images */
            .yolo {
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Box shadow with a slight blur and opacity */
            }
        /* Add additional styles as needed for .item-name, .small-text, and img */

        /* ... */
        .gray-button {
            position: relative;
            background-color: #ccc; /* Gray background color */
            border: none;
            padding: 10px 90px%; /* Adjust padding as needed */
            border-radius: 10%; /* Remove border-radius to eliminate rounded corners */
            cursor: pointer;
             /* Make it a block-level element */
             /* Set width to 100% to span the entire width */
            text-align: center; 
            transition: background-color 0.6s, color 0.3s; /* Center text horizontally within the button */
        }

            .gray-button.selected {
                background-color: darkgray; /* Change the background color for the selected state */
                color: white; /* Change text color when selected, if needed */
                /* Add any other styles for the selected state here */
            }

        .slide-hidden {
            transform: translateY(-100%);
            opacity: 0;
            transition: transform 0.9s ease, opacity 0.9s ease;
        }

        /* Visible state */
        .slide-visible {
            transform: translateY(0);
            opacity: 1;
            transition: transform 0.9s ease, opacity 0.9s ease;
        }

        .modal-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 90000;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            text-align: center;
            z-index: 90000;
        }

        .modal-close {
            cursor: pointer;
            z-index: 90000;
        }
        

           
    </style>

    <!-- Include jQuery library -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

    <div class="center-container">
        <div class="item-card-container">
            @if (Model.FlowerItems.Count > 0)
            {
                @foreach (var item in Model.FlowerItems)
                {
                    <div class="item-card" data-item-id="@item.FlowerItem.Id">
                        <div class="item-content" style="border-radius: 9px;">
                            <div class="left-content" style="margin-left:20px;">
                                <h6 class="item-name ml-4">@item.FlowerItem.FlowerItem.Name</h6>
                                <p class="small-text ml-4">Size: @item.FlowerItem.Size.ToString().ToLower()</p>
                                <p class="small-text ml-4">Price: @item.FlowerItem.Price $</p>
                                <p class="small-text ml-4">Quantity: @item.Count</p>
                            </div>
                            <div class="right-content">
                                <img class="yolo mr-6"  src="data:image/png;base64,@Convert.ToBase64String(item.FlowerItem.FlowerItem.Image)"
                                     style="margin-right:50px; width: 150px; height: auto; border-radius: 8px;" />
                                <button type="button" style="margin-right:30px;" class="btn  " id="delete-item1">
                                    <img src="~/css/delete.png" style="width:42px; height:42px;" />
                                </button>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <h5 class="m-4">Shopping cart is currently empty!</h5>
                <form asp-action="Index" asp-controller="FlowerItems">
                <button  class=" m-2 btn btn-primary">Shop for Flowers!</button>
                </form>
            }
        </div>
    </div>

  



   
    @if (Model.FlowerItems.Count > 0)
    {
        <!-- Clickable delivery image and label -->
        <div class="container-fluid">
            <div class="center-container d-flex justify-content-center align-items-center">
            <div class="d-flex justify-content-around align-content-around clickable-content">
                <div>
                    <button id="ajaxButton" class="gray-button" data-toggle="tooltip" data-placement="top" title="Delivery">
                        <img src="~/css/shipped.png" alt="Delivery" style="width:30px; height:30px;" class="mr-2" />
                        <img src="~/css/down.png" alt="Delivery" style="width:15px; height:15px;" />
                    </button>
                </div>

                <div class="ml-3">
                    <form asp-action="Details" asp-controller="Orders" method="post">
                        <!-- Add margin to create space between buttons -->
                        <input type="hidden" name="id" value="1"/>
                        <button id="wlol" style="margin-left: 15px;" class="btn btn-success">
                            Pick up at Store
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    }




    <div id="partialViewContainer" class="slide-hidden"></div>


    <div class="modal-container" id="deleteConfirmationModal1">
        <div class="modal-content">
            <h5>Confirm Deletion</h5>
            <p>Are you sure you want to delete this item?</p>
            <button style=" z-index: 90000;" id="confirmDelete1" type="button" class=" btn btn-danger">Delete</button>
            <span class="modal-close " id="closeModal1">&times;</span>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>
        $(document).ready(function () {
            // Your code here
          $('[data-toggle="tooltip"]').tooltip();

            let isButtonSelected = false;

            $("#ajaxButton").click(function () {
                // Toggle the isButtonSelected variable
                isButtonSelected = !isButtonSelected;

                // Check if the button is selected
                if (isButtonSelected) {
                    // Add the 'selected' class to indicate selection
                    $("#partialViewContainer").removeClass("slide-hidden")
                    $("#partialViewContainer").addClass("slide-visible")
                    $(this).addClass("selected");
                    $("#wlol").hide();

                    // Make a GET Ajax request when the button is clicked
                    $.ajax({
                        type: "GET",
                        url: "/Orders/Details", // Replace with the actual URL of your partial view
                        success: function (data) {
                            // Update the content of the partial view container with the retrieved data
                            $("#partialViewContainer").html(data);
                        },
                        error: function (error) {
                            console.error("Error loading partial view:", error);
                        }
                    });
                } else {
                    // Remove the 'selected' class to indicate deselection
                    $("#partialViewContainer").removeClass("slide-visible")
                    $("#partialViewContainer").addClass("slide-hidden")
                    $(this).removeClass("selected");
                    $("#wlol").show();

                    // Clear the content of the partial view container
                    $("#partialViewContainer").html("");
                }
            });

            var deleteItemId; // To store the ID of the item to delete

            // Handle delete button click
            $('#delete-item1').click(function () {
                var itemCard = $(this).closest('.item-card');
                deleteItemId = itemCard.data('item-id'); // Get the item ID
                // Show the confirmation modal
                $('#deleteConfirmationModal1').fadeIn('fast');
            });

            // Handle confirmation modal Delete button click
            $('#confirmDelete1').click(function () {
                // Close the confirmation modal
                $('#deleteConfirmationModal1').fadeOut('fast');

                // Perform the deletion via AJAX
                $.ajax({
                    url: '@Url.Action("RemoveItem", "Orders")', // Adjust the URL as needed
                    type: 'POST',
                    data: { itemId: deleteItemId },
                    success: function (result) {
                        // Handle success, e.g., remove the item card from the UI
                        $('.item-card[data-item-id="' + deleteItemId + '"]').fadeOut('fast', function () {
                            $(this).remove();
                        });
                        if (window.location.pathname.includes('/Orders/ShowDetails')) {
                            // Reload the page
                            window.location.reload();
                        }

                    },
                    error: function () {
                        // Handle error
                    }
                });
            });

            // Handle modal close button click
            $('#closeModal1').click(function () {
                $('#deleteConfirmationModal1').fadeOut('fast');
            });
        });
        
    </script>

</body>
</html>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



